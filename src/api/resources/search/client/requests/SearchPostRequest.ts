/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as NewscatcherApi from "../../../../index";

/**
 * @example
 *     {
 *         q: "renewable energy",
 *         predefinedSources: ["top 50 US"],
 *         lang: ["en"],
 *         from: new Date("2024-01-01T00:00:00.000Z"),
 *         to: new Date("2024-06-30T00:00:00.000Z"),
 *         additionalDomainInfo: true,
 *         isNewsDomain: true
 *     }
 */
export interface SearchPostRequest {
    q: NewscatcherApi.Q;
    searchIn?: NewscatcherApi.SearchIn;
    predefinedSources?: NewscatcherApi.PredefinedSources;
    sourceName?: NewscatcherApi.SourceName;
    sources?: NewscatcherApi.Sources;
    notSources?: NewscatcherApi.NotSources;
    lang?: NewscatcherApi.Lang;
    notLang?: NewscatcherApi.NotLang;
    countries?: NewscatcherApi.Countries;
    notCountries?: NewscatcherApi.NotCountries;
    notAuthorName?: NewscatcherApi.NotAuthorName;
    from?: NewscatcherApi.From;
    to?: NewscatcherApi.To;
    publishedDatePrecision?: NewscatcherApi.PublishedDatePrecision;
    byParseDate?: NewscatcherApi.ByParseDate;
    sortBy?: NewscatcherApi.SortBy;
    rankedOnly?: NewscatcherApi.RankedOnly;
    fromRank?: NewscatcherApi.FromRank;
    toRank?: NewscatcherApi.ToRank;
    isHeadline?: NewscatcherApi.IsHeadline;
    isOpinion?: NewscatcherApi.IsOpinion;
    isPaidContent?: NewscatcherApi.IsPaidContent;
    parentUrl?: NewscatcherApi.ParentUrl;
    allLinks?: NewscatcherApi.AllLinks;
    allDomainLinks?: NewscatcherApi.AllDomainLinks;
    additionalDomainInfo?: NewscatcherApi.AdditionalDomainInfo;
    isNewsDomain?: NewscatcherApi.IsNewsDomain;
    newsDomainType?: NewscatcherApi.NewsDomainType;
    newsType?: NewscatcherApi.NewsType;
    wordCountMin?: NewscatcherApi.WordCountMin;
    wordCountMax?: NewscatcherApi.WordCountMax;
    page?: NewscatcherApi.Page;
    pageSize?: NewscatcherApi.PageSize;
    clusteringEnabled?: NewscatcherApi.ClusteringEnabled;
    clusteringVariable?: NewscatcherApi.ClusteringVariable;
    clusteringThreshold?: NewscatcherApi.ClusteringThreshold;
    includeNlpData?: NewscatcherApi.IncludeNlpData;
    hasNlp?: NewscatcherApi.HasNlp;
    theme?: NewscatcherApi.Theme;
    notTheme?: NewscatcherApi.NotTheme;
    orgEntityName?: NewscatcherApi.OrgEntityName;
    perEntityName?: NewscatcherApi.PerEntityName;
    locEntityName?: NewscatcherApi.LocEntityName;
    miscEntityName?: NewscatcherApi.MiscEntityName;
    titleSentimentMin?: NewscatcherApi.TitleSentimentMin;
    titleSentimentMax?: NewscatcherApi.TitleSentimentMax;
    contentSentimentMin?: NewscatcherApi.ContentSentimentMin;
    contentSentientMax?: NewscatcherApi.ContentSentimentMax;
    iptcTags?: NewscatcherApi.IptcTags;
    notIptcTags?: NewscatcherApi.NotIptcTags;
    iabTags?: NewscatcherApi.IabTags;
    notIabTags?: NewscatcherApi.NotIabTags;
    customTags?: NewscatcherApi.CustomTags;
    excludeDuplicates?: NewscatcherApi.ExcludeDuplicates;
}
