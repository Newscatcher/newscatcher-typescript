/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as NewscatcherApi from "../index";

/**
 * Natural Language Processing data for the article.
 */
export interface NlpDataEntity {
    /** The themes or categories identified in the article. */
    theme?: string;
    /** A brief AI-generated summary of the article content. */
    summary?: string;
    sentiment?: NewscatcherApi.SentimentScores;
    /**
     * A dense 1024-dimensional vector representation of the article content, generated using  the [multilingual-e5-large](https://huggingface.co/intfloat/multilingual-e5-large) model.
     *
     * **Note**: The `new_embedding` field is only available in the `v3_local_news_nlp_embeddings` subscription plan.
     */
    newEmbedding?: number[];
    /** Named Entity Recognition for person entities (individuals' names). */
    nerPer?: NewscatcherApi.NamedEntityList;
    /** Named Entity Recognition for organization entities (company names, institutions). */
    nerOrg?: NewscatcherApi.NamedEntityList;
    /** Named Entity Recognition for miscellaneous entities (events, nationalities, products). */
    nerMisc?: NewscatcherApi.NamedEntityList;
    /** Named Entity Recognition for location entities (cities, countries, geographic features). */
    nerLoc?: NewscatcherApi.NamedEntityList;
    /** IPTC media topic taxonomy paths identified in the article content. Each path represents a hierarchical category following the IPTC standard. */
    iptcTagsName?: string[];
    /** IPTC media topic numeric codes identified in the article content. These codes correspond to the standardized IPTC media topic taxonomy. */
    iptcTagsId?: string[];
    /** IAB content taxonomy paths identified in the article content. Each path represents a hierarchical category following the IAB content standard. */
    iabTagsName?: string[];
}
