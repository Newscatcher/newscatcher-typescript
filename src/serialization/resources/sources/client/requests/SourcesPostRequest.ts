/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as NewscatcherApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { Lang } from "../../../../types/Lang";
import { Countries } from "../../../../types/Countries";
import { PredefinedSources } from "../../../../types/PredefinedSources";
import { SourceName } from "../../../../types/SourceName";
import { SourceUrl } from "../../../../types/SourceUrl";
import { IncludeAdditionalInfo } from "../../../../types/IncludeAdditionalInfo";
import { IsNewsDomain } from "../../../../types/IsNewsDomain";
import { NewsDomainType } from "../../../../types/NewsDomainType";
import { NewsType } from "../../../../types/NewsType";
import { FromRank } from "../../../../types/FromRank";
import { ToRank } from "../../../../types/ToRank";

export const SourcesPostRequest: core.serialization.Schema<
    serializers.SourcesPostRequest.Raw,
    NewscatcherApi.SourcesPostRequest
> = core.serialization.object({
    lang: Lang.optional(),
    countries: Countries.optional(),
    predefinedSources: core.serialization.property("predefined_sources", PredefinedSources.optional()),
    sourceName: core.serialization.property("source_name", SourceName.optional()),
    sourceUrl: core.serialization.property("source_url", SourceUrl.optional()),
    includeAdditionalInfo: core.serialization.property("include_additional_info", IncludeAdditionalInfo.optional()),
    isNewsDomain: core.serialization.property("is_news_domain", IsNewsDomain.optional()),
    newsDomainType: core.serialization.property("news_domain_type", NewsDomainType.optional()),
    newsType: core.serialization.property("news_type", NewsType.optional()),
    fromRank: core.serialization.property("from_rank", FromRank.optional()),
    toRank: core.serialization.property("to_rank", ToRank.optional()),
});

export declare namespace SourcesPostRequest {
    interface Raw {
        lang?: Lang.Raw | null;
        countries?: Countries.Raw | null;
        predefined_sources?: PredefinedSources.Raw | null;
        source_name?: SourceName.Raw | null;
        source_url?: SourceUrl.Raw | null;
        include_additional_info?: IncludeAdditionalInfo.Raw | null;
        is_news_domain?: IsNewsDomain.Raw | null;
        news_domain_type?: NewsDomainType.Raw | null;
        news_type?: NewsType.Raw | null;
        from_rank?: FromRank.Raw | null;
        to_rank?: ToRank.Raw | null;
    }
}
