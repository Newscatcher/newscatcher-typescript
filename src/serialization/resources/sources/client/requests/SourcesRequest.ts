/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as NewscatcherApi from "../../../../../api/index";
import * as core from "../../../../../core";

export const SourcesRequest: core.serialization.Schema<serializers.SourcesRequest.Raw, NewscatcherApi.SourcesRequest> =
    core.serialization.object({
        lang: core.serialization.unknown().optional(),
        countries: core.serialization.unknown().optional(),
        predefinedSources: core.serialization.property("predefined_sources", core.serialization.unknown().optional()),
        includeAdditionalInfo: core.serialization.property(
            "include_additional_info",
            core.serialization.boolean().optional()
        ),
        fromRank: core.serialization.property("from_rank", core.serialization.number().optional()),
        toRank: core.serialization.property("to_rank", core.serialization.number().optional()),
        sourceName: core.serialization.property("source_name", core.serialization.unknown().optional()),
        sourceUrl: core.serialization.property("source_url", core.serialization.unknown().optional()),
        isNewsDomain: core.serialization.property("is_news_domain", core.serialization.boolean().optional()),
        newsDomainType: core.serialization.property("news_domain_type", core.serialization.unknown().optional()),
        newsType: core.serialization.property("news_type", core.serialization.unknown().optional()),
    });

export declare namespace SourcesRequest {
    interface Raw {
        lang?: unknown | null;
        countries?: unknown | null;
        predefined_sources?: unknown | null;
        include_additional_info?: boolean | null;
        from_rank?: number | null;
        to_rank?: number | null;
        source_name?: unknown | null;
        source_url?: unknown | null;
        is_news_domain?: boolean | null;
        news_domain_type?: unknown | null;
        news_type?: unknown | null;
    }
}
