/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as NewscatcherApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { Ids } from "../../../../types/Ids";
import { Links } from "../../../../types/Links";
import { From } from "../../../../types/From";
import { To } from "../../../../types/To";
import { Page } from "../../../../types/Page";
import { PageSize } from "../../../../types/PageSize";

export const SearchUrlPostRequest: core.serialization.Schema<
    serializers.SearchUrlPostRequest.Raw,
    NewscatcherApi.SearchUrlPostRequest
> = core.serialization.object({
    ids: Ids.optional(),
    links: Links.optional(),
    from: core.serialization.property("from_", From.optional()),
    to: core.serialization.property("to_", To.optional()),
    page: Page.optional(),
    pageSize: core.serialization.property("page_size", PageSize.optional()),
});

export declare namespace SearchUrlPostRequest {
    interface Raw {
        ids?: Ids.Raw | null;
        links?: Links.Raw | null;
        from_?: From.Raw | null;
        to_?: To.Raw | null;
        page?: Page.Raw | null;
        page_size?: PageSize.Raw | null;
    }
}
