/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as NewscatcherApi from "../../../../../api/index";
import * as core from "../../../../../core";
import { SearchUrlRequestFrom } from "../../types/SearchUrlRequestFrom";
import { SearchUrlRequestTo } from "../../types/SearchUrlRequestTo";

export const SearchUrlRequest: core.serialization.Schema<
    serializers.SearchUrlRequest.Raw,
    NewscatcherApi.SearchUrlRequest
> = core.serialization.object({
    ids: core.serialization.unknown().optional(),
    links: core.serialization.unknown().optional(),
    from: core.serialization.property("from_", SearchUrlRequestFrom.optional()),
    to: core.serialization.property("to_", SearchUrlRequestTo.optional()),
    page: core.serialization.number().optional(),
    pageSize: core.serialization.property("page_size", core.serialization.number().optional()),
});

export declare namespace SearchUrlRequest {
    interface Raw {
        ids?: unknown | null;
        links?: unknown | null;
        from_?: SearchUrlRequestFrom.Raw | null;
        to_?: SearchUrlRequestTo.Raw | null;
        page?: number | null;
        page_size?: number | null;
    }
}
